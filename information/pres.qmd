---
title: "Анализ Git репозиториев"
author: "ФИО <br>Москва 2025"
format:
  revealjs:
    theme: sky
    fontsize: 32px
---

## Цели

Проект может быть использован для следующих целей:

-   анализ благонадёжности пользователя как контрагента на основании его поведенческого профиля;
-   детектирование аномалий для предотвращения подмены кода в разрабатываемых проектах.

### Поведенческий профиль

Поведенческий профиль разработчика создаётся на основе его коммитов в репозитории своего профиля (по умолчанию - за год)

## Архитектура

Форма представления проекта: shiny-приложение

::: {style="text-align: center;"}
<br><img src="img/arck.png" width="80%"/>
:::

## Стек технологий

Будут использованы следующие технологии:

-   Backend: R
-   Frontend: Shiny
-   Data processing: dplyr, purrr, httr2, dummy
-   Визуализация: ggplot2, plotly, heatmaps
-   ML: PCA
-   Интеграции: GitHub API v3

## Интеграция с DuckDB

<img src="img/duck_db.png" width="80%"/>

Кеширование коммитов просканированных репозиториев

# Фаза ETL данных

## Работа с репозиториями

### GitHub API

<img src="img/github-mark.png" width="80%"/>


## Поэтапное формирование ETL

1.  Получение списка репозиториев разработчика;
2.  На основе полученной информации о репозиториях:
    1.  Формирование списка коммитов;
    2.  Формирование данных о forks и issues;
    3.  Формирование списка используемых ЯП;
    4.  Формирование тепловой карты по датам коммитов.

## Программная реализация

### Используемые библиотеки:

-   httr2 - загрузка данных из API;
-   dplyr - очистка, преобразование и агрегирование данных, полученных из API;
-   purrr - преобразование данных и обработка ошибок;
-   futile.logger - логирование.

# Фаза аналитики & ML

## Обработка данных

Анализ характера вносимых изменений производится подсчётом количества добавленных, удалённых и изменённых строк.

Создание профиля разработчика происходит на основе данных о коммитах в его репозиториях. Подсчёт аномалий, на данный момент, высчитывается Методом главных компонент.

### Нормализация данных, поэтапно:

1.  С помощью dummy, признаки разбиваются с категориальных на некатегориальные;
2.  Агрегация данных о коммитах;
3.  Нормализация методом MinMax;
4.  Определение главных компонентов;
5.  Определение аномалий по порогу выброса.

## Метрики качества моделей

### Исходные

-   id - SHA
-   patch - текст
-   repo - название
-   author - имя
-   date - дата коммита
-   filename - название файла

## Метрики качества моделей

### Исходные

-   status - статус файла (added, removed, changed)
-   additions - N добавленных строк
-   deletions - N удалённых строк
-   changes - N изменённых строк
-   message - сообщение коммита
-   branch - название ветки

## Метрики качества моделей

### Производные

::: {style="text-align: center; width=200%"}
<img src="img/skelet.png"/>
:::

## Программная реализация

### Используемые библиотеки:

-   PCA
-   dlpyr, dummy

## LLM Yandex

### Запрос

-   Ответ должен строго соответствовать JSON-схеме.
-   Включать только файлы с конкретными доказательствами риска и четкими рекомендациями по исправлению.

## LLM Yandex

### Ответ

-   Нормальные файлы: пустой массив analysis.
-   Аномальные файлы: структура строго по следующей схеме:

```
{
  "analysis": [
    {
      "path": "путь/к/файлу",
      "risk_level": "CRITICAL" | "WARNING" | "INFO" | "SAFE",
      "reason": "обоснование наличия риска",
      "code_snippet": "фрагмент кода с проблемой",
      "recommendations": [
        "рекомендация по исправлению"
      ]
    }
  ],
  "status": "CRITICAL" | "WARNING" | "SAFE"
}
```

# Фаза визуализации

## Shiny

Визуализация простроена на Shiny.

::: {style="text-align: center;"}
<img src="img/Shiny_hex_logo.png" width="45%"/>
:::

## Автоотчёт

<img src="img/profile.png" width="100%"/>

# Документация

## Общая документация в README

::: {style="text-align: center;"}
<img src="img/readme.png" width="80%"/>
:::

## Подробная документация на сайте

::: {style="text-align: center;"}
<img src="img/site.png" width="80%"/>
:::

# Рабочая версия программы

## Список репозиториев

<img src="img/repos.png" width="100%"/>

## Список коммитов

<img src="img/coms.png" width="100%"/>

## События

<img src="img/issues.png" width="100%"/>

## Распределение используемых языков

<img src="img/language.png" width="100%"/>

## Тепловая карта активности

<img src="img/acts.png" width="100%"/>

## Анализ аномалий

<img src="img/llm.png" width="100%"/>
